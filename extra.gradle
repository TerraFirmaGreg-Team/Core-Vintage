def stones = [
        rocktype: [
                RockVariant  : [    "raw", "cobble", "bricks", "smooth", "gravel", "sand", "anvil", "speleothem"],
                RockBlockType: [    "ordinary"      : ["raw",  "brick", "smooth"],
                                    "falling"       : ["gravel", "cobble", "sand"],
                                    "mossy"         : ["cobble", "brick"],
                                    "chiseled"      : ["brick"],
                                    "cracked"       : ["brick"],
                                    "stairs"        : ["raw", "cobble", "brick", "smooth"],
                                    "slab"          : ["raw", "cobble", "brick", "smooth"],
                                    "slab_double"   : ["raw", "cobble", "brick", "smooth"],
                                    "wall"          : ["raw", "cobble", "brick", "smooth"],
                                    "anvil"         : ["raw"],
                                    "button"        : ["raw"],
                                    "pressure_plate": ["raw"],
                                    "loose"         : ["raw"],
                                    "brick"         : ["raw"],
                                    "speleothem"    : ["raw"]],
                RockType     : [
                                    // igneous_intrusive
                                    "granite", "diorite", "gabbro",
                                    // sedimentary
                                    "shale", "claystone", "limestone", "conglomerate", "dolomite", "chert", "chalk",
                                    // igneous_extrusive
                                    "rhyolite", "basalt", "andesite", "dacite",
                                    // metamorphic"
                                    "quartzite", "slate", "phyllite", "schist", "gneiss", "marble"]
        ],
        soiltype: [
                SoilVariant  : [    "dirt", "grass", "dry_grass", "path", "clay", "clay_grass", "farmland", "rooted_dirt", "mud", "mud_bricks", "drying_bricks"],
                SoilBlockType: [    "ordinary"      : ["grass",  "dry_grass", "clay_grass"],
                                    "falling"       : ["dirt", "clay"]],
                SoilType     : [    "silt", "loam", "sandy_loam", "silty_loam"]
        ]
]


task processResourceTemplates(type: Copy, group: "tfg utils", description: "Creates Resources from templates") {
    doLast {
        println sourceSets.main.resources.srcDirs
    }
}

stones.each { key, value ->
    value.RockBlockType.each { rockBlocktype, rockVariant ->
        rockVariant.each { item_variant ->
            task "processBlockstateTemplatesFor${key.capitalize()}${rockBlocktype.capitalize()}${item_variant.capitalize()}"(type: Copy) {
                from "resources_templates"
                into "src/main/resources"
                include "**/blockstates/rock/${rockBlocktype}.json"
                rename "(.*)", "${rockBlocktype}/${item_variant}.json"
                expand(types: value.RockType, texture_variant: item_variant, texture_type: rockBlocktype)
            }
            processResourceTemplates.dependsOn "processBlockstateTemplatesFor${key.capitalize()}${rockBlocktype.capitalize()}${item_variant.capitalize()}"
        }
    }
    value.SoilBlockType.each { soilBlocktype, soilVariant ->
        soilVariant.each { item_variant ->
            task "processBlockstateTemplatesFor${key.capitalize()}${soilBlocktype.capitalize()}${item_variant.capitalize()}"(type: Copy) {
                from "resources_templates"
                into "src/main/resources"
                include "**/blockstates/soil/${item_variant}.json"
                rename "(.*)", "${item_variant}.json"
                expand(types: value.SoilType, texture_variant: item_variant, texture_type: soilBlocktype)
            }
            processResourceTemplates.dependsOn "processBlockstateTemplatesFor${key.capitalize()}${soilBlocktype.capitalize()}${item_variant.capitalize()}"
        }
    }
}

processResources.dependsOn processResourceTemplates
