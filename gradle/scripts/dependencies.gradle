apply from: 'gradle/scripts/helpers.gradle'

repositories {
    // Other repositories described by default:
    // CleanroomMC: https://maven.cleanroommc.com
    exclusiveContent {
        forRepository {
            maven {
                name 'CurseMaven'
                url 'https://cursemaven.com'
            }
        }
        filter {
            includeGroup 'curse.maven'
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name 'Modrinth'
                url 'https://api.modrinth.com/maven'
            }
        }
        filter {
            includeGroup 'maven.modrinth'
        }
    }
    mavenLocal() // Must be last for caching to work

    flatDir {
        dirs 'libs'
    }
}

dependencies {

    // Util dependencies
    if (project.use_util.toBoolean()) {
        implementation rfg.deobf("curse.maven:configanytime-870276:4576653")
        implementation rfg.deobf("maven.modrinth:fluidlogged-api:2.2.7")
        implementation rfg.deobf("curse.maven:the-one-probe-community-edition-885670:4746213")
        implementation rfg.deobf("curse.maven:had-enough-items-557549:4571247")

        implementation rfg.deobf("curse.maven:athenaeum-284350:4633750")
        implementation rfg.deobf("curse.maven:dropt-284973:3758733")
//        compileOnly("curse.maven:crafttweaker-239197:4731280")
//        compileOnly("curse.maven:game-stages-268655:2951840")

//        implementation("curse.maven:future-mc-310059:3924863")
//        implementation rfg.deobf("curse.maven:shadowfacts-forgelin-248453:2785465")

        //runtimeOnly("curse.maven:fancy-spawn-eggs-302277:2612571")
        //runtimeOnly("maven.modrinth:better-biome-blend:1.12.2-1.1.7-forge")
        //runtimeOnly("curse.maven:spark-361579:3542217")
        runtimeOnly("curse.maven:debug-block-collision-302110:2613483")
        implementation rfg.deobf("curse.maven:realistic-terrain-generation-unofficial-648514:4696300")
    }

    // GregTech dependencies
    if (project.use_gregtech.toBoolean()) {
        implementation rfg.deobf("maven.modrinth:gregtech-ce-unofficial:2.7.3-beta")
        implementation rfg.deobf("maven.modrinth:gregicality-multiblocks:1.2.5")

        runtimeOnly("curse.maven:3.2.3.358-codechicken-lib-1-8-242818:2779848")
        runtimeOnly("curse.maven:ctm-267602:2915363")
        //runtimeOnly("curse.maven:chisel-235279:2915375")
    }

    // Dramatic Trees dependencies
    if (project.use_dramatic_trees.toBoolean())
        implementation rfg.deobf("maven.modrinth:dtree:0.13.2")


    // Tinkers Construct dependencies
    if (project.use_tconstruct.toBoolean()) {
        implementation rfg.deobf("curse.maven:2.13.0.183-tinkers-construct-74072:2902483")
        implementation rfg.deobf("curse.maven:1.2.5.10-constructs-armory-287683:3174535")
        implementation rfg.deobf("curse.maven:0.4.3-tinkers-complement-272671:2843439")
        implementation rfg.deobf("curse.maven:1.3.3.55-mantle-74924:2713386")
        if (project.use_util.toBoolean())
            runtimeOnly("curse.maven:1.2-tinkers-jei-291786:2701203")
    }

    // Forestry dependencies
    if (project.use_forestry.toBoolean()) {
        implementation rfg.deobf("curse.maven:5.8.2.422-forestry-59751:2918418")
        implementation rfg.deobf("maven.modrinth:binnies-mods-patched:2.5.1.210")
        if (project.use_dramatic_trees.toBoolean())
            runtimeOnly("curse.maven:dynamic-trees-forestry-401558:3261440")
        if (project.use_util.toBoolean())
            runtimeOnly("curse.maven:jei-bees-248370:2490058")
    }

    // Pams Harvestcraf dependencies
    if (project.use_pams.toBoolean()) {
        implementation rfg.deobf("maven.modrinth:pams-harvestcraft:1.12.2zg")
        if (project.use_util.toBoolean())
            runtimeOnly("curse.maven:just-enough-harvestcraft-267939:2997129")
    }

    // Example - Dependency descriptor:
    // 'com.google.code.gson:gson:2.8.6' << group: com.google.code.gson, name:gson, version:2.8.6
    // 'group:name:version:classifier' where classifier is optional

    // Example - Deobfuscating dependencies:
    // rfg.deobf('curse.maven:had-enough-items-557549:4543375')
    // By wrapping a dependency descriptor in rfg.deobf() method call, the dependency is queued for deobfuscation
    // When deobfuscating, RFG respects the mapping_channel + mapping_version stated in gradle.properties

    // Example - CurseMaven dependencies:
    // 'curse.maven:had-enough-items-557549:4543375' << had-enough-items = project slug, 557549 = project id, 4543375 = file id
    // Full documentation: https://cursemaven.com/

    // Example - Modrinth dependencies:
    // 'maven.modrinth:jei:4.16.1.1000' << jei = project name, 4.16.1.1000 = file version
    // Full documentation: https://docs.modrinth.com/docs/tutorials/maven/

    // Common dependency types (configuration):
    // implementation = dependency available at both compile time and runtime
    // runtimeOnly = runtime dependency
    // compileOnly = compile time dependency
    // annotationProcessor = annotation processing dependencies

    // Transitive dependencies:
    // (Dependencies that your dependency depends on)
    // If you wish to exclude transitive dependencies in the described dependencies
    // Use a closure as such:
    // implementation ('com.google.code.gson:gson:2.8.6') {
    //     transitive = false
    // }
}
